/**
 * Internal dependencies
 */
import createHooks from './createHooks';
export * from './types';
export declare const defaultHooks: import("./createHooks")._Hooks;
declare const addAction: import("./createAddHook").AddHook, addFilter: import("./createAddHook").AddHook, removeAction: import("./createRemoveHook").RemoveHook, removeFilter: import("./createRemoveHook").RemoveHook, hasAction: import("./createHasHook").HasHook, hasFilter: import("./createHasHook").HasHook, removeAllActions: import("./createRemoveHook").RemoveHook, removeAllFilters: import("./createRemoveHook").RemoveHook, doAction: import("./createRunHook").RunHook, doActionAsync: import("./createRunHook").RunHook, applyFilters: import("./createRunHook").RunHook, applyFiltersAsync: import("./createRunHook").RunHook, currentAction: () => string | null, currentFilter: () => string | null, doingAction: import("./createDoingHook").DoingHook, doingFilter: import("./createDoingHook").DoingHook, didAction: import("./createDidHook").DidHook, didFilter: import("./createDidHook").DidHook, actions: import("./types").Store, filters: import("./types").Store;
export { createHooks, addAction, addFilter, removeAction, removeFilter, hasAction, hasFilter, removeAllActions, removeAllFilters, doAction, doActionAsync, applyFilters, applyFiltersAsync, currentAction, currentFilter, doingAction, doingFilter, didAction, didFilter, actions, filters, };
//# sourceMappingURL=index.d.ts.map