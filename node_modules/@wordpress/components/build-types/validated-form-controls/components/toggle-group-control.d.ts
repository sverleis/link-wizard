import type { ValidatedControlProps } from './types';
export declare const ValidatedToggleGroupControl: import("react").ForwardRefExoticComponent<Omit<Omit<Pick<import("../../base-control/types").BaseControlProps, "help" | "__nextHasNoMarginBottom"> & {
    label: string;
    hideLabelFromVision?: boolean;
    isAdaptiveWidth?: boolean;
    isBlock?: boolean;
    isDeselectable?: boolean;
    onChange?: (value: string | number | undefined) => void;
    value?: string | number;
    children: import("react").ReactNode;
    size?: "default" | "__unstable-large";
    __next40pxDefaultSize?: boolean;
    __shouldNotWarnDeprecated36pxSize?: boolean;
} & import("react").RefAttributes<any> & Omit<Omit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref">, "size" | "help" | "label" | "children" | "onChange" | "value" | "as" | keyof import("react").RefAttributes<any> | "isBlock" | "__next40pxDefaultSize" | "__shouldNotWarnDeprecated36pxSize" | "hideLabelFromVision" | "__nextHasNoMarginBottom" | "isAdaptiveWidth" | "isDeselectable">, "__next40pxDefaultSize" | "__nextHasNoMarginBottom"> & ValidatedControlProps<string | number | undefined>, "ref"> & import("react").RefAttributes<HTMLInputElement>>;
//# sourceMappingURL=toggle-group-control.d.ts.map