import type { ValidatedControlProps } from './types';
export declare const ValidatedRangeControl: import("react").ForwardRefExoticComponent<Omit<Omit<Pick<import("../../base-control/types").BaseControlProps, "help" | "hideLabelFromVision" | "__nextHasNoMarginBottom"> & import("../../range-control/types").NumericProps & {
    disabled?: boolean;
    marks?: boolean | {
        value: number;
        label?: string;
    }[];
    step?: number | "any";
} & {
    afterIcon?: import("../..").IconType;
    allowReset?: boolean;
    beforeIcon?: import("../..").IconType;
    color?: import("react").CSSProperties["color"];
    currentInput?: number;
    icon?: string;
    initialPosition?: number;
    isShiftStepEnabled?: boolean;
    label?: string;
    onBlur?: import("react").FocusEventHandler<HTMLInputElement>;
    onChange?: (value?: number) => void;
    onFocus?: import("react").FocusEventHandler<HTMLInputElement>;
    onMouseLeave?: import("react").MouseEventHandler<HTMLInputElement>;
    onMouseMove?: import("react").MouseEventHandler<HTMLInputElement>;
    railColor?: import("react").CSSProperties["color"];
    renderTooltipContent?: (value?: import("../../range-control/types").ControlledRangeValue) => string | number | null | undefined;
    resetFallbackValue?: number;
    separatorType?: "none" | "fullWidth" | "topFullWidth";
    shiftStep?: number;
    __next40pxDefaultSize?: boolean;
    showTooltip?: boolean;
    trackColor?: import("react").CSSProperties["color"];
    type?: "stepper";
    withInputField?: boolean;
    __shouldNotWarnDeprecated36pxSize?: boolean;
} & Omit<Omit<import("react").DetailedHTMLProps<import("react").InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>, "ref">, "color" | "help" | "icon" | "disabled" | "label" | "type" | "children" | "onFocus" | "onBlur" | "onChange" | "onMouseLeave" | "onMouseMove" | "step" | "as" | "__next40pxDefaultSize" | "__shouldNotWarnDeprecated36pxSize" | "hideLabelFromVision" | "__nextHasNoMarginBottom" | "showTooltip" | "isShiftStepEnabled" | "shiftStep" | keyof import("../../range-control/types").NumericProps | "marks" | "afterIcon" | "allowReset" | "beforeIcon" | "currentInput" | "initialPosition" | "railColor" | "renderTooltipContent" | "resetFallbackValue" | "separatorType" | "trackColor" | "withInputField"> & import("react").RefAttributes<HTMLInputElement>, "__next40pxDefaultSize" | "__nextHasNoMarginBottom"> & ValidatedControlProps<number | undefined>, "ref"> & import("react").RefAttributes<HTMLInputElement>>;
//# sourceMappingURL=range-control.d.ts.map